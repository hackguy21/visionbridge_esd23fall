#################################

#0. 라즈베리파이 zero 2w 초기환경설정 - 2023/11/06

#################################

 

0-1.

https://www.youtube.com/watch?v=IDqQIDL3LKg

위 링크의 영상을 이용해서 zero 2w의 초기환경설정을 진행하였다.

기본적으로 선택되어 있는 0.9GB의 legacy OS를 선택하였다.

집에서 사용하는 동일한 네트워크 환경을 유지할 수 있는 것이 좋으며

os설치를 수행하는 imager에서 커스텀 설정을 통해

와이파이의 SSID와 비밀번호를 설정한 뒤 sd카드에 설치한 뒤 라즈베리파이에 꽂고 5pin power를 연결해주면

디폴트는 pi라는 이름으로, 무선네트워크 환경에 알아서 접속이 된다.

공유기환경에서 라즈베리파이 기기의 ip를 알아낼 수 있다.

(제조사마다 다를것 같지만 내 기준 iptime의 192.168.0.1에서 트래픽관리를 통해 확인

192.168.0.14 의 ip주소를 찾을 수 있었다.)

window나 mac을 기준으로 putty를 통해 해당 ip주소로 ssh 접속을 진행해준다.

 

0-2.

라즈베리파이 os(구칭 라즈비안)는 리눅스환경이며 처음 푸티로 ssh접속을 하면

batch시스템상에서 명령어를 내려야 한다.

sudo apt-get update를 통해 OS를 업데이트 한 후

SSH연결을 허용하기 위해

sudo raspi-config에서 5.interface option - SSH에서 ssh enable을 해준뒤 exit을 해준다.

이후 원격제어를 위하여

sudo apt-get tightvncserver 와 sudo apt-get xrdp

를 수행하여 관련 프로그램을 설치한다.

 

0-3

그리고 사용하는 컴퓨터, 내 윈도우 컴퓨터에서는 기본적으로 깔려있는

remote desktop connection, 원격 데스크톱 연결이라는 프로그램을 검색 후 실행하고

위에서 찾은 ip주소와, 라즈베리파이의 id와 password를 입력하여

컴퓨터 상에서 원격으로 모니터 없이 라즈베리파이를 제어할 수 있다.

 

0-4

리눅스의 batch 문법인 ls, cs, mkdir, remove, sudo, wget의 문법과

nano, vim과 같은 에디터를 사용하는 법을 간단하게 알아두자.

zero 2w는 gui를 기본적으로 지원해줘서 완벽하게 알 필요까지는 없어보인다.

 

# 라즈베리파이 zero 2w 초기환경설정 완료

 

 

##############################################

#1. zero 2w상에서 음성파일의 재생

##############################################

 


 

1-1

라즈베리파이 zero 2w에는 dac speaker가 따로 존재하지 않는다.

PWM을 지원하는 GPIO핀과 GND 핀을 선정하여 3.5mm AUX단자를 아래와 같이 연결하여 이어폰을 연결하여 구현하여야 할 듯하다.

https://www.youtube.com/watch?v=Lwr8LLvLRb8

위와 같이 3.5mm AUX단자의 뿌리부분에 GND(검정악어클립)을 연결하고

끝부분에 PWM핀(노란악어클립)을 연결하여야 한다.

 

 


 

1-2.

mono Wav파일을 재생하는 방법을 먼저 수행하여야 한다.

Pygame 라이브러리를 활용하여 wav파일을 불러오고

audiocore와 audiopwmio 라이브러리를 통해서 GPIO를 제어할 수 있다.

샘플 사운드파일을 3개정도 저장하고 순차적으로 재생하는 코드를 최우선적으로 작성하도록 하자.

유선이어폰을 구해서 납땜하여 제대로 재생이 되는지 확인하자.

이 단계를 완료해야 다음단계로 넘어갈 수 있다.

 

 

###############################

 

 

# 2. 블루투스 스피커 페어링 및 자동연결하기 - 231107

 

(https://rottk.tistory.com/entry/라즈베리-파이와-블루투스-장치스피커-연결하기)

기본적으로 설치되어 있는 라즈베리파이 OS에는 블루투스 기능이 기본적으로 설치되어있다.

콘솔창에서

 

2-1.

$ bluetoothctl

를 통해서 블루투스 제어콘솔로 진입한다.


 

2-2.

$show

를 통해서 라즈베리파이의 블루투스 모듈이 정상적으로 설정되어 있는지 확인한다.

Powered: yes, Pairable:yes가 되어있을 때 블루투스 연결이 가능한 상황임을 나타낸다.

 

2-3.

scan on 이라는 명령어를 통해 주변 블루투스 기기들의 정보를 얻은 후

scan off 로 탐색을 종료한다.

내 경우 QCY-APP의 MAC address에 해당하는 84:AC:60:55:B7:27 을 찾은 후 scan off했다.

 


 

2-4.

블루투스 콘솔창에

pair 84:AC:60:55:B7:27를 통해 이어폰과 페어링을 진행한후

connect 84:AC:60:55:B7:27를 통해 이어폰과 연결한다.

이어폰의 최초연결의 경우 여기서 추가적인 작업은 필요하지 않다.

페어링에 성공하면, 아래와 같이 기기명의 이름-[QCY-T17]-이 나온다.

이어폰의 전원을 Off하였을 때, [CHG] Device ~~ Connected: no

이어폰을 다시 On하면 , [CHG] Device ~~ Connected: yes

가 나오는 것을 볼 수 있다.

자동 재연결을 위해서

trust 84:AC:60:55:B7:27

수행해주자.

 


 

2-5.(바로 2-6으로)

이제 블루투스 이어폰에 연결이 완료되었다.

(밑에거는 안해도됨)

$ aplay -D bluealsa:HCI=hci0,DEV=84:AC:60:55:B7:27 /usr/share/sounds/alsa/Side_Right.wav Playing WAVE '/usr/share/sounds/alsa/Side_Right.wav' : Signed 16 bit Little Endian, Rate 48000 Hz, Mono

를 통해 라즈베리파이 OS에 내장된 wav 음원파일을 aplay로 재생해주자.

arecord는 alsa-utils에 포함되어 있는 프로그램이다. 없으면

sudo apt-get install alsa-utils

로 설치해주자.

(참조 : https://snowdeer.github.io/raspberry/2017/08/12/raspberry-aplay-and-arecord/)

 

2-6.

/usr/share/sounds/alsa에 기본적인 사운드 파일이 있다.

gui를 통해 해당 디렉토리로 이동후 VLC플레이어로 재생하면 블루투스 이어폰을 통해 재생이 가능한 것을 확인할 수 있다.

 

# 2. 블루투스 스피커 페어링하기 완료

###################################

 

###################################

다음에 할 일

위에 있는 기본 wav 파일을 이용하여

python 상에서 pygame 라이브러리를 이용해 음원 재생하기




# #3.Python 개발환경을 위한 VSC 원격접속 - 231108

###################################

1. Python 개발환경을 위한 VSC 원격접속 - 231108

(참조자료1 : https://m.blog.naver.com/elepartsblog/221733804381)

(참조자료2 : [https://velog.io/@thdusdl4767/Raspberry-Pi-Visual-Studio-Code에서-라즈베리파이-원격제어](https://velog.io/@thdusdl4767/Raspberry-Pi-Visual-Studio-Code%EC%97%90%EC%84%9C-%EB%9D%BC%EC%A6%88%EB%B2%A0%EB%A6%AC%ED%8C%8C%EC%9D%B4-%EC%9B%90%EA%B2%A9%EC%A0%9C%EC%96%B4))

######################################

4.

다음에 할 일

위에 있는 기본 wav 파일을 이용하여 

python 상에서 pygame 라이브러리를 이용해 음원 재생하기


# #4.Binaural Sound 만들기 - 231113

4.

다음에 할 일

위에 있는 기본 wav 파일을 이용하여 

python 상에서 pygame 라이브러리를 이용해 음원 재생하기

######################################

5.

입력받은 물체의 좌표값에 따른 사운드파일의 재생

5-0

Spatial sound, Binaural Sound 등으로 나타내어지는 머리전달함수와 공간음향에 대한 

사운드 처리를 생각해봤으나, 사운드파일도 핸들링 안되는 상황에서

다른 방식의 매핑은 없을까 생각해보았다.

만약 이러한 hrtf의 필터링을 도전한다면, 먼저 매틀랩을 통해서

구현하는 더 친절할 것이며, wav파일을 생성하는 것도 매틀랩쪽이 훨씬 더 간단하다.

5-1

다른 방법 중에서 생각해본 한 가지는

아래와 같은 Binaural Beat를 사용하는 것이다.

유튜브에 파이썬과 KEMAR, SOFA등을 통해 hrtf에 제대로 필터링 하는 찐 Binaural sound는 없고 

유사품인 Binaural Beat가 검색되길래 봤는데

아래와 같은 프로그램을 통해 Binaural Beat를 손쉽게 만들수있었다.

(https://github.com/accel-brain/accel-brain-code/tree/master/Binaural-Beat-and-Monaural-Beat-with-python)

Azimuth에 비례하는 값을 설정하고

Horiontal한 방향에 따라 휴리스틱하게 분배한 값을 

양 귀의 주파수로 설정한다면, 손쉽게 매핑이 가능해진다.

########################

6-0  - 231113

어찌어찌해서 KEMAR의 머리전달함수 필터를 적용시키는 것을 적용해서 azimuth가 구별되는

sound를 만들었다. wav파일이 impulse response이며, 그냥 동일한 샘플링레이트에서 convolution하면 끝. 1초남짓한 44.1khz 박수 소리에 대한 sound set을 완성했다.

https://www.youtube.com/watch?v=a4mpK_2koR4&t=168s

이거보고 따라하면됨

231113 binaural sound set 제작 완료

########################

다음에 해야할 일 : 이러한 binaural set을 라즈베리파이에 옮긴뒤 순서대로 재생하기


#5.SSH 개발환경구축
